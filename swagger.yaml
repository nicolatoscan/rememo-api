swagger: "2.0"
info:
  description: >
    This is the official documentation of all the APIs that are used in the project **Rememo**. <br>
    All these APIs are divided into sections that are organized in the following way:<br>
    **1. Authentication** <br>
    **2. Users** <br>
    **3. Collections** <br>
    **4. Study** <br>
    **5. Share** <br>
    **6. Stats** <br>
    **7. Class** <br>

  version: "2.0.0"
  title: "Rememo API"
  license:
    name: MIT
    url: https://github.com/nicolatoscan/rememo-api/blob/main/LICENSE
host: rememo-api.herokuapp.com
basePath: /api/v2
tags:
  - name: "auth"
    description: "Authentication"
  - name: "users"
    description: "Users"
  - name: "collections"
    description: "Collections"
  - name: "study"
    description: "Study"
  - name: "share"
    description: "Share"
  - name: "class"
    description: "Class"
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

paths:

  /auth/signup:
    post:
      tags:
        - "auth"
      summary: "Create a New User"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/SignupUser"
      responses:
        201:
          description: "An object which defines the newly created User"
          schema:
            $ref: "#/definitions/SignupUserResponse"
          examples:
            application/json:
              {
                "username": "Test Displayname",
                "email": "email@example.com",
                "displayName": "TestUsername",
              }

  /auth/login:
    post:
      tags:
        - "auth"
      summary: "Login"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/LoginUser"
      responses:
        200:
          description: "An object which defines the logged in User"
          schema:
            $ref: "#/definitions/SignupUserResponse"
          examples:
            application/json:
              {
                "username": "Test Displayname",
                "email": "email@example.com",
                "displayName": "TestUsername",
              }

  /users:
    get:
      tags:
        - "users"
      summary: "Get the logged in User"
      responses:
        201:
          description: "An object which defines the retrieved logged in User"
          schema:
            $ref: "#/definitions/SignupUserResponse"
          examples:
            application/json:
              {
                "username": "Test Displayname",
                "email": "email@example.com",
                "displayName": "TestUsername",
              }

    delete:
      tags:
        - "users"
      summary: "Delete the logged in User"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/LoginUser"
      responses:
        200:
          description: "The User has been deleted"

    put:
      tags:
        - "users"
      summary: "Update the logged in User"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateUser"
      responses:
        201:
          description: "An object which defines the updated logged in User"
          schema:
            $ref: "#/definitions/SignupUserResponse"
          examples:
            application/json:
              {
                "username": "Test Displayname",
                "email": "email@example.com",
                "displayName": "TestUsername",
              }

  /collections/min:
    get:
      tags:
        - "collections"
      summary: "Get all my and/or class minified Collections"
      parameters:
        - name: mine
          in: query
          type: boolean
        - name: classes
          in: query
          type: string
      responses:
        200:
          description: "An array of objects which defines the minified Collections"
          schema:
            $ref: "#/definitions/CollectionMinArray"
          examples:
            application/json:
              [
                {
                  "_id": "5fb6e4b522935b001216de8c",
                  "name": "Testing Collection",
                  "description": "Testing description",
                  "owner": "TestUsername",
                  "languageFrom": "en",
                  "languageTo": "it",
                  "inClassName": "Testing Collection",
                },
                {
                  "_id": "6ts6e4b123935b004476de8c",
                  "name": "Testing Collection",
                  "description": "Testing description",
                  "owner": "TestUsername",
                  "languageFrom": "en",
                  "languageTo": "it",
                  "inClassName": "Testing Collection",
                },
              ]

  /collections:
    get:
      tags:
        - "collections"
      summary: "Get all my and/or class Collections"
      parameters:
        - name: mine
          in: query
          type: boolean
        - name: classes
          in: query
          type: string
      responses:
        200:
          description: "An array of objects which defines the Collections"
          schema:
            $ref: "#/definitions/CollectionCompleteArray"
          examples:
            application/json:
              [
                {
                  "_id": "b34h5s234k5h4jk5h32j4k5c",
                  "name": "My Favorite Colors",
                  "description": "All my favorite colors put together!",
                  "languageFrom": "en",
                  "languageTo": "it",
                  "inClassName": "My Favorite Colors",
                  "index": "123",
                  "owner": "Mario",
                  "share": "true",
                  "words":
                    [
                      {
                        "index": "456",
                        "original": "Red",
                        "translation": "Rosso",
                        "languageFrom": "en",
                        "languageTo": "it",
                      },
                    ],
                },
                {
                  "_id": "b34h5s234k5h4jk5h32j4k5c",
                  "name": "My Favorite Colors",
                  "description": "All my favorite colors put together!",
                  "languageFrom": "en",
                  "languageTo": "it",
                  "inClassName": "My Favorite Colors",
                  "index": "123",
                  "owner": "Mario",
                  "share": "true",
                  "words":
                    [
                      {
                        "index": "456",
                        "original": "Red",
                        "translation": "Rosso",
                        "languageFrom": "en",
                        "languageTo": "it",
                      },
                    ],
                },
              ]
    post:
      tags:
        - "collections"
      summary: "Create a new Collection"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Collection"
      responses:
        201:
          description: "An object which defines the id of the new Collection"
          schema:
            $ref: "#/definitions/ReturnId"
          examples:
            application/json: { "_id": "0123456789abcdef01234567" }

  /collections/{collectionId}:
    get:
      tags:
        - "collections"
      summary: "Get the Collection by its id"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "An object which defines the Collection"
          schema:
            $ref: "#/definitions/CollectionComplete"
          examples:
            application/json:
              {
                "_id": "b34h5s234k5h4jk5h32j4k5c",
                "name": "My Favorite Colors",
                "description": "All my favorite colors put together!",
                "languageFrom": "en",
                "languageTo": "it",
                "inClassName": "My Favorite Colors",
                "index": "123",
                "owner": "Mario",
                "share": "true",
                "words":
                  [
                    {
                      "index": "456",
                      "original": "Red",
                      "translation": "Rosso",
                      "languageFrom": "en",
                      "languageTo": "it",
                    },
                  ],
              }

    put:
      tags:
        - "collections"
      summary: "Update the Collection by its id"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateCollection"
      responses:
        204:
          description: "The Collection has been updated"

    delete:
      tags:
        - "collections"
      summary: "Delete the Collection by its id"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Collection has been deleted"

  /collections/{collectionId}/words:
    post:
      tags:
        - "collections"
      summary: "Create a new Word in the Collection by its id"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Word"
      responses:
        201:
          description: "An object which defines the id of the new Word"
          schema:
            $ref: "#/definitions/ReturnId"
          examples:
            application/json: { "_id": "0123456789abcdef01234567" }

  /collections/{collectionId}/words/{wordId}:
    delete:
      tags:
        - "collections"
      summary: "Delete the Word of the Collection by their ids"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: wordId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Word has been deleted"
    put:
      tags:
        - "collections"
      summary: "Update the Word of the Collection by their ids"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: wordId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Word has been updated"

    get:
      tags:
        - "collections"
      summary: "Get the Word of the Collection by their ids"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: wordId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "An object which defines the Word"
          schema:
            $ref: "#/definitions/Word"
          examples:
            application/json:
              {
                "_id": "b44f8vn47fbfhb3b34t",
                "index": "1",
                "original": "Red",
                "translation": "apple",
                "languageForm": "en",
                "languageTo": "it",
              }

  /study/learn/{collectionId}/status:
    get:
      tags:
        - "study"
      summary: "Get the Learn State of the Collection"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "An array of objects which defines the Learn State of the Collection"
          schema:
            $ref: "#/definitions/CollectionLearnState"
          examples:
            application/json:
              [
                { "wordId": "353hk23j5b23k5bjk2sdfasd", "learned": "0.343" },
                { "wordId": "891fedf7gd7fgd89f789df7g", "learned": "0.575" },
              ]

  /study/learn/{collectionId}/learned:
    put:
      tags:
        - "study"
      summary: "Update the Learn State of the Word in the Collection"
      parameters:
        - name: collectionId
          in: path
          type: string
          required: true
        - name: wordId
          in: query
          type: string
          required: true
        - name: status
          in: query
          type: number
          required: true
      responses:
        204:
          description: "The Word Learn State has been updated"

  /study/learn/{collectionId}/reset:
    put:
      tags:
        - "study"
      summary: "Reset the Learn State of the Collection"
      parameters:
        - name: collectionId
          in: path
          type: string
          required: true
      responses:
        204:
          description: "The Collection Learn State has been reseted"

  /study/train/result:
    post:
      tags:
        - "study"
      summary: "Save the Result of the asked Word in Train"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/TrainingResult"
      responses:
        204:
          description: "The Result has been saved"

  /study/train/next:
    post:
      tags:
        - "study"
      summary: "Ask for the next Word to be used in Train"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/NextWordQuery"
      responses:
        200:
          description: "An object which defines the next Word to be used in Train"
          schema:
            $ref: "#/definitions/FullWord"
          examples:
            application/json:
              {
                "_id": "b44f8vn47fbfhb3b34t",
                "index": "1",
                "original": "Red",
                "translation": "apple",
                "languageForm": "en",
                "languageTo": "it",
                "collectionId": "n45jn4nj4j4b3j45j",
              }

  /study/test/generate:
    post:
      tags:
        - "study"
      summary: "Generate a test in Test"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/TestQuery"
      responses:
        201:
          description: "An object which defines the structure of a test data"
          schema:
            $ref: "#/definitions/Test"
          examples:
            application/json:
              {
                "numberOfQuestions": "20",
                "collectionPollIds": ["1", "2", "3"],
                "questions":
                  [
                    {
                      "collectionId": "44",
                      "wordId": "420",
                      "question": "apple",
                      "correct": "mela",
                      "answer": "libro",
                      "result": "false",
                    },
                  ],
                "_id": "11",
                "ownerId": "65",
                "createdOn": "2020-11-13",
                "corrected": "false",
              }

  /study/test/check:
    post:
      tags:
        - "study"
      summary: "Check a test in Test"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Test"
      responses:
        201:
          description: "An object which defines the data to be verified in Train"
          schema:
            $ref: "#/definitions/Test"
          examples:
            application/json:
              {
                "numberOfQuestions": "20",
                "collectionPollIds": ["1", "2", "3"],
                "questions":
                  [
                    {
                      "collectionId": "44",
                      "wordId": "420",
                      "question": "apple",
                      "correct": "mela",
                      "answer": "libro",
                      "result": "false",
                    },
                  ],
                "_id": "11",
                "ownerId": "65",
                "createdOn": "2020-11-13",
                "corrected": "true",
              }

  /share/{collectionId}:
    get:
      tags:
        - "share"
      summary: "Share the Collection"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "The URL for sharing the Collection"
          examples:
            application/json: { "url": "share/import/5fbeca7fa4b2a77d62753073" }

  /share/import/{collectionId}:
    get:
      tags:
        - "share"
      summary: "Import the Collection"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Collection has been imported"

  /stats/test/{collectionId}/word/{wordId}:
    get:
      tags:
        - "stats"
      summary: "Get the Stats about the Word of the Collection in Test"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: wordId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "An object which defines the Stats of the Word in Test"
          schema:
            $ref: "#/definitions/StatsTest"
          examples:
            application/json: { "correctTest": "0", "wrongTest": "0" }

  /stats/train/{collectionId}/word/{wordId}:
    get:
      tags:
        - "stats"
      summary: "Get the Stats about the Word of the Collection in Train"
      parameters:
        - name: collectionId
          in: path
          required: true
          type: string
        - name: wordId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "An object which defines the Stats of the Word in Train"
          schema:
            $ref: "#/definitions/StatsTrain"
          examples:
            application/json: { "correctTrain": "0", "wrongTrain": "0" }

  /stats/class/{classId}:
    get:
      tags:
        - "stats"
      summary: "Get the Stats about the Class"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "An object which defines the Stats of the Class"
          schema:
            $ref: "#/definitions/StatsClass"
          examples:
            application/json:
              {
                "classId": "5fd69c9a4d2554534ca3bb78",
                "correct": "0",
                "wrong": "0",
                "users": { "5fd69bef4d2554534ca3bb69": "TestUsername" },
                "collections":
                  {
                    "5fd69bfd4d2554534ca3bb73":
                      {
                        "collectionId": "5fd69bfd4d2554534ca3bb73",
                        "name": "Testing Collection",
                        "correct": "0",
                        "wrong": "0",
                        "usernames": ["5fd69bef4d2554534ca3bb69"],
                        "words":
                          {
                            "5fd69bfd4d2554534ca3bb72":
                              {
                                "wordId": "5fd69bfd4d2554534ca3bb72",
                                "name": "Red",
                                "correct": "0",
                                "wrong": "0",
                              },
                            "5fd69c004d2554534ca3bb76":
                              {
                                "wordId": "5fd69c004d2554534ca3bb76",
                                "name": "Green",
                                "correct": "0",
                                "wrong": "0",
                              },
                            "5fd69c024d2554534ca3bb77":
                              {
                                "wordId": "5fd69c024d2554534ca3bb77",
                                "name": "Blue",
                                "correct": "0",
                                "wrong": "0",
                              },
                          },
                      },
                  },
              }

  /class:
    get:
      tags:
        - "class"
      summary: "Get all the joined or/and my Classes"
      parameters:
        - name: type
          in: query
          type: string
          required: true
          enum:
            - created
            - joined
            - both
      responses:
        200:
          description: "An array of objects which defines the Classes"
          schema:
            $ref: "#/definitions/ClassArray"
          examples:
            application/json:
              [
                {
                  "_id": "5fd6556fb8465313945b966e",
                  "name": "Class 1",
                  "collections":
                    ["5fd64de5b8465313945b9669", "1sd64de5b8465313945b9939"],
                  "mine": "true",
                },
                {
                  "_id": "5fd6556fb8465313945b966e",
                  "name": "Class 2",
                  "collections":
                    ["5fd64de5b8465313945b9669", "1sd64de5b8465313945b9939"],
                  "mine": "false",
                },
              ]

    post:
      tags:
        - "class"
      summary: "Create a new Class"
      parameters:
        - name: classData
          in: body
          required: true
          schema:
            $ref: "#/definitions/ClassName"
      responses:
        201:
          description: "The id of the newly created Class"
          schema:
            $ref: "#/definitions/ReturnId"
          examples:
            application/json: { "_id": "0123456789abcdef01234567" }

  /class/{classId}:
    get:
      tags:
        - "class"
      summary: "Get the Class by its id"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "An object which defines the new Class"
          schema:
            $ref: "#/definitions/ClassMinStructure"
          examples:
            application/json:
              {
                "_id": "5fd6556fb8465313945b966e",
                "name": "Class 1",
                "collections":
                  ["5fd64de5b8465313945b9669", "1sd64de5b8465313945b9939"],
                "mine": "true",
              }
    put:
      tags:
        - "class"
      summary: "Update the Class by its id"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
        - name: classData
          in: body
          required: true
          schema:
            $ref: "#/definitions/ClassName"
      responses:
        204:
          description: "The Class has been updated"

    delete:
      tags:
        - "class"
      summary: "Delete the Class by its id"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Class has been deleted"

  /class/{classId}/full:
    get:
      tags:
        - "class"
      summary: "Get the full Class by its id"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "An object which defines the full structure of the Class"
          schema:
            $ref: "#/definitions/ClassFullStructure"
          examples:
            application/json:
              {
                "_id": "5fd6dcb1ce33c27e30e8bc17",
                "name": "lallo",
                "students":
                  [
                    {
                      "_id": "5fd6f1725e27455158cbe01e",
                      "displayName": "paperino",
                      "username": "paperino",
                    },
                  ],
                "collections":
                  [
                    {
                      "_id": "5fd67f9a18febb313b9c820f",
                      "name": "dfg",
                      "description": "gfd",
                      "languageFrom": "English",
                      "languageTo": "Italian",
                    },
                  ],
              }

  /class/{classId}/join:
    put:
      tags:
        - "class"
      summary: "Join the Class by its id"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Class has been joined by the Student"

  /class/{classId}/leave:
    put:
      tags:
        - "class"
      summary: "Leave the Class by its id"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Class has been left by the Student"

  /class/{classId}/kick/{studentId}:
    put:
      tags:
        - "class"
      summary: "Kick the Student out from the Class by their ids"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
        - name: studentId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Student has been kicked out from the Class"

  /class/{classId}/addCollection/{collectionId}:
    put:
      tags:
        - "class"
      summary: "Add the Collection to the Class by their ids"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Collection has been added to the Class"

  /class/{classId}/removeCollection/{collectionId}:
    put:
      tags:
        - "class"
      summary: "Remove the Collection from the Class by their ids"
      parameters:
        - name: classId
          in: path
          required: true
          type: string
        - name: collectionId
          in: path
          required: true
          type: string
      responses:
        204:
          description: "The Collection has been removed from the Class"

definitions:
  StatsTrain:
    title: StatsTest
    type: object
    properties:
      correctTrain:
        type: number
      wrongTrain:
        type: number

  TrainingResult:
    title: TrainingResult
    type: object
    properties:
      collectionId:
        type: string
      wordId:
        type: string
      correct:
        type: boolean
    required:
      - collectionId
      - wordId
      - correct

  NextWordQuery:
    title: NextWordQuery
    type: object
    properties:
      collectionPollIds:
        type: array
        items:
          type: string
        uniqueItems: true

  StatsTest:
    title: StatsTest
    type: object
    properties:
      correctTest:
        type: number
      wrongTest:
        type: number
  Test:
    title: Test
    type: object
    properties:
      _id:
        type: string
      ownerId:
        type: string
      createdOn:
        type: string
      numberOfQuestions:
        type: number
      collectionPollIds:
        type: array
      corrected:
        type: boolean
      questions:
        type: array
        items:
          $ref: "#/definitions/Question"
    required:
      - numberOfQuestions
      - collectionPollIds
      - questions

  Question:
    title: Question
    type: object
    properties:
      collectionId:
        type: string
      wordId:
        type: string
      question:
        type: string
      correct:
        type: string
      answer:
        type: string
      result:
        type: boolean
    required:
      - collectionId
      - wordId
      - question

  TestQuery:
    title: TestQuery
    type: object
    properties:
      numberOfQuestions:
        type: number
      collectionPollId:
        type: array
    required:
      - numberOfQuestions
      - collectionPollId

  ReturnId:
    title: ReturnId
    type: object
    properties:
      _id:
        type: string
    required:
      - _id

  LoginUser:
    title: LoginUser
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
      - username
      - password

  SignupUser:
    title: SignupUser
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      displayName:
        type: string
      email:
        type: string
    required:
      - username
      - password
      - displayName
      - email

  UpdateUser:
    title: UpdateUser
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      displayName:
        type: string
      email:
        type: string
      newPassword:
        type: string
    required:
      - username
      - password

  SignupUserResponse:
    title: SignupUser
    type: object
    properties:
      username:
        type: string
      displayName:
        type: string
      email:
        type: string
    required:
      - username
      - displayName
      - email

  Collection:
    title: Collection
    type: object
    properties:
      index:
        type: integer
      name:
        type: string
      description:
        type: string
      owner:
        type: string
      languageFrom:
        type: string
      languageTo:
        type: string
      words:
        type: array
        items:
          $ref: "#/definitions/Word"
    required:
      - index
      - name
      - description
      - owner
      - words

  CollectionArray:
    title: CollectionArray
    type: array
    items:
      $ref: "#/definitions/Collection"

  UpdateCollection:
    title: Collection
    type: object
    properties:
      index:
        type: integer
      name:
        type: string
      description:
        type: string
      languageFrom:
        type: string
      languageTo:
        type: string
    required:
      - index
      - name
      - description

  FullWord:
    title: CollectionComplete
    allOf:
      - $ref: "#/definitions/Word"
    type: object
    properties:
      collectionId:
        type: string
    required:
      - collectionId

  Word:
    title: Word
    type: object
    properties:
      _id:
        type: string
      index:
        type: integer
      original:
        type: string
      translation:
        type: string
      languageFrom:
        type: string
      languageTo:
        type: string
    required:
      - _id
      - index
      - original
      - translation

  CollectionLearnState:
    title: CollectionLearnState
    type: array
    items:
      $ref: "#/definitions/WordLearnState"

  WordLearnState:
    title: WordLearnState
    type: object
    properties:
      wordId:
        type: string
      learned:
        type: number
    required:
      - wordId
      - learned

  CollectionMinStructure:
    title: CollectionMinStructure
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      description:
        type: string
      languageFrom:
        type: string
      languageTo:
        type: string
      inClassName:
        type: string
    required:
      - _id
      - name

  CollectionComplete:
    title: CollectionComplete
    allOf:
      - $ref: "#/definitions/CollectionMinStructure"
    type: object
    properties:
      index:
        type: integer
      owner:
        type: string
      share:
        type: boolean
      words:
        type: array
        items:
          $ref: "#/definitions/Word"

  CollectionMinArray:
    title: CollectionMinArray
    type: array
    items:
      $ref: "#/definitions/CollectionMinStructure"

  CollectionCompleteArray:
    title: CollectionCompleteArray
    type: array
    items:
      $ref: "#/definitions/CollectionComplete"

  ClassArray:
    title: ClassArray
    type: array
    items:
      $ref: "#/definitions/ClassMinStructure"

  ClassMinStructure:
    title: ClassStructure
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      collections:
        type: array
        items:
          type: string
        uniqueItems: true
      mine:
        type: boolean
    required:
      - _id
      - name

  ClassName:
    title: ClassName
    type: object
    properties:
      className:
        type: string
    required:
      - className

  ClassFullStructure:
    title: ClassFullStructure
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      students:
        type: array
        items:
          $ref: "#/definitions/StudentStructure"
      collections:
        type: array
        items:
          $ref: "#/definitions/CollectionMinStructure"

  StudentArray:
    title: ClassArray
    type: array
    items:
      $ref: "#/definitions/StudentStructure"

  StudentStructure:
    title: ClassStructure
    type: object
    properties:
      _id:
        type: string
      username:
        type: string
      displayName:
        type: string
    required:
      - _id
      - username
      - displayName

  StatsClass:
    title: StatsClass
    type: object
    properties:
      classId:
        type: string
      correct:
        type: number
      wrong:
        type: number
      users:
        type: object
        properties:
          id:
            type: string
      collections:
        type: object
        properties:
          id:
            type: string
          collectionId:
            type: string
          name:
            type: string
          correct:
            type: number
          wrong:
            type: number
          usernames:
            type: array
          words:
            type: object
            properties:
              wordId:
                type: string
              name:
                type: string
              correct:
                type: number
              wrong:
                type: number
